GameServices -> EnemyPath komponens ### leírás ###

											IPath modul (kommunikációs felület)

	(X) komponens létrehoz (N) ellenséget. Ezt közli a IPath felületen keresztül, hogy az (N)-eket el kell pozícionálni a jeleneten. 
	Szükség lehet:
		 
		 modul inicializálása -> Initialize 
		 (n)-ek törlésére -> DisposePoint
		 (n)-ek létrehozására -> SpawnPoint
		 (N) időközönkénti lekérdezése (x) részéről -> Positions
		 	

			public interface IPath
	
					Célja: funckionálisan releváns üzenetváltások felület és külső komponensek között. 

			void Initialize(); 
 					
					A jelenethez, játékmenethez stb. igazodva beállítja a komponens tárolóit.

			void DisposePoint(int id); 
			
		  			A jeleneten megszűnt egy ellenség, törölni kell a pozícióját.			

					> id: minden ellenségnek a jelenetben létezik egy egyedi azonosítója.

			void SpawnPoint(); 
				 	A jeleneten létrejött egy ellenség, meg kell határozni a pozícióját.		

			Positions GetPositions();
 					A jelenet leképezéséért felelős komponens hívja. Visszaad egy pozíciótérképet ami alapján el tudja helyezni az 'enemy'-ket a jeleneten (mozgatás).
					
					> Positions: minden ellenség adott jelenetben lévő pozícióinak halmaza, tartalmazza továbbá az ellenségek id-ját is, amit további célokra is 
					  fel lehet használni. A háttérben JSON-ös formában van letárolva (gyorsabb).


										PositionMatrix (adattároló)

	Szükség lehet a következő adattagokra:

		(n) pontkoordináták: x, y.
		(n) azonosítók: id

 

Adatok létrehozása vagy törlése [spawn_dispose]:

	- Célja: kezeli a 'positions' adattárolót ('position'-öket hoz létre vagy töröl). Működése a 'path_interface'-en keresztül érkező hívásoktól függ.
	  [pld.:] Y komponens érzékeli, hogy a játékos adott 'position'-ön lévő ellenséget eltalált a lövedékével. Y komponens üzenetet küld 'path_interface'-en keresztül,
	  jelezvén, hogy a pozíción lévő ellenség megsemmisült. Ekkor a 'spawn_dispose' fogja lekezelni a 'positions' tárolót.

Tárolt adatok [positions]:

	- Célja: 'positon' - esetleg egyéb célú - adatok tárolása. Folyamatos frissítésre van szüksége.
	  [pld.:] az n-edik 'positon'-t át kell számolni mozgási, irányváltási, sebességgel kapcsolatos tényezők miatt.
	  Ezt az n-t az adatok frissítése 'path_impl' modulon belül újra kell számolni, majd visszaírni a 'positions'-ba.
	  Ugyanakkor a 'path_interface' felé is küldi az adatokat: Z komponensnek jelzi, hogy a rajzterületen a "régi" n pozícióról az "új" n pozícióra 
	  képezze le az ellenséget.

Adatok frissítése [path_impl]:

	- Célja: 'position' jellegű - esetleg egyéb célú adatok - újraszámolása. Több összetevőre lehet számítani. 
		> Irány 'destination': a kamera állásától független, ezért alapértelmezetten a játékos felé kell elszórtan haladniuk. Ez egy irányt jelent.
		> Sebesség 'velocity': az ellenségek eltérő sebességűek lehetnek.
		> Mozgás 'movement': több féle minta szerint mozoghatnak az ellenségek.

	  
 
	   
