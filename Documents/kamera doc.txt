public:
//kamera jelenlegi koordinátái
double camera_position_x=0;
double camera_position_y=0;
double camera_position_z=0;
//A közelség, amitol látható egy objektum
double znear;
//A távolság, ahonnét már nem jelenítjük meg az objektumot
double zfar;
//0 ->2D mód, 1 ->3D mód
bool view=0;
private:
//up és forward vektor
double up_x=camera_position_x;
double up_y=camera_position_y+10;
double up_z=camera_position_z;
double forward_x=camera_position_x;
double forward_y=camera_position_y;
double forward_z=camera_position_z-10;
//forgatás szöge
int angle=0;

//metódusok
private void up(){
	up_x=camera_position_x;
	up_y=camera_position_y+10;
	up_z=camera_position_z;
}
//a forward vektor kiszámítása, a step metódus része lesz
private void forward(){
	/*ha az x tengely irányába forgattunk
	double temp_y=forward_y;
	double temp_z=forward_z;
	forward_x=forward_x;
	forward_y=temp_y*cos(angle)+temp_z*(-sin(angle));
	forward_z=temp_y*sin(angle)+temp_z*cos(angle);*/
	
	/*ha az y tengely irányába forgattunk
	double temp_x=forward_x;
	double temp_z=forward_z;
	forward_x=temp_x*cos(angle)+temp_z*sin(angle);
	forward_y=forward_y;
	forward_z=temp_x*(-sin(angle)+temp_z*cos(angle));*/
	
	/*ha a z tengely irányába forgattunk
	double temp_x=forward_x;
	double temp_y=forward_y;
	forward_x=temp_x*cos(angle)+temp_y*(-sin(angle));
	forward_y=temp_x*sin(angle)+temp_y*cos(angle);
	forward_z=forward_z;*/
}
/*x      |  1  0       0       0 | |x|
		 |  0  cos(A) -sin(A)  0 | |y|
         |  0  sin(A)  cos(A)  0 | |z|
         |  0  0       0       1 | |0|
		 
y		 |  cos(A)  0   sin(A)  0 | |x|
		 |  0       1   0       0 | |y|
         | -sin(A)  0   cos(A)  0 | |z|
         |  0       0   0       1 | |0|
		 
z		 |  cos(A)  -sin(A)   0   0 | |x|
		 |  sin(A)   cos(A)   0   0 | |y|
         |  0        0        1   0 | |z|
         |  0        0        0   1 | |0|
*/
/* left vektor kiszámítása az up és forward segítségével, a step metódus része lesz 
private void left()
{
	double left_x=up_y*forward_z-up_z*forward_y
	double left_y=-(up_x*forward_z-up_z*forward_x)
	double left_z=up_x*forward_y-up_y*forward_x
} */
//a fo számoló metódus
public void step()//TODO:A metódus megírása
//public void draw();

//https://msdn.microsoft.com/en-us/library/system.windows.media.media3d(v=vs.110).aspx